JSP.txt
 책 p12~
정적 데이터: HTML, CSS, JS, IMG 등..
동적 데이터: JSP(JAVA), CGI(DB연동불편), ASP, PHP
ASP: C#, ASP.Net/ VBScript라는 스크립트 언어를 사용해서 구성. JSP에 비해 효율성과 확장성이 떨어짐.
PHP: C언어를 기반으로 만들어짐. C언어만 하면 단순하고 쉬움. 100% 무료/ 보안성 취약, 확장성 낮음. 대규모프로젝트 실패
JAVA  JSP:
 
 JSP=> Java Server Page
       JAVA(=서블릿)
       JAVA -> run(서블릿) -> Class
*JSP 지시어(Directive) p150~
 : JSP 페이지에서 실행할 때 필요한 정보(설정) 작성하는 공간
   page 지시어, include 지시어, taglib 지시어
   
 <%@ 내용 %>
 
 *JSP 스크립트요소 (문법)
 1) JSP 선언문(Declaration) p160~
    멤버변수/멤버메서드 선언할 때 사용
    
    <%! 
    	ing a; // 멤버변수
    	public void method(){
    		//멤버메서드
    	}
    
     %>
    
 2) JSP 스크립틀릿(Scriptlet) = 지시문
 	HTML 페이지에서 JAVA코드를 사용하기 위해서 만들어진 문법
 	
 	<%
 		실행문;
 		int 변수;  //지역변수
 	%>
 	
 3) JSP 표현식 (Expression)
 	HTML코드에 정보(JSP) 출력
 	
 	<%=변수 / 값 %>
 	<%=메서드 호출(리턴 있을때만)/ 수식 %>
 
 **********************************************************************************************************************
 JAVA - Class(클래스)
 class 클래스명{
 	int 변수명;   // 멤버변수(전역변수)
 	int itwill;
 	
 	public void 메서드명(){  //멤버메서드
 		int 변수; // 지역변수
 		int busan;
 		print(itwill);
 		print(busan);
 	
 		표현식(itwill);
 		표현식(busan);
 	}
 }
 ***********************************************************************************************************************
 
 액션태그: jsp페이지에서만 사용 가능
 		   HTML 태그형태로 JSP의 동작을 수행 가능하게 하는 태그
 		   (정적)          (동적) 즉, 정적태그 형태로 동적데이터를 처리하는 것.
 
 <%@ include %>  (include 지시어)
 => 페이지 내부에 속성(값)을 추가할 때 사용
 => 페이지를 컴파일하기 전에 소스코드를 합쳐서 컴파일
 <jsp:include/>  (include 액션태그)
 => 공통적인 페이지를 추가할 때 사용 (페이지의 제어권을 넘겨서 사용)
 => 페이지를 컴파일 후에 include해서 사용
 
 
 p177~208 [JSP 내장객체] 외워야함
 
 	   jsp에 이미 내장되어있는 객체
 	   
 javax.servlet패키지 - 8개
 	request: 클라이언트의 HTTP 요청정보를 저장한 객체
 	response: HTTP요청에 대한 처리결과정보를 저장한 객체
 	session: 클라이언트의 세션정보를 저장한 객체
 	pageContext: 페이지를 실행할 때 필요한 정보(컨텍스트)를 저장한 객체 (컨텍스트<=>프로젝트)
 	out: 응답페이지 전송을 위한 출력(스트림) 객체
 	application: 애플리케이션의 컨텍스트 정보를 저장하는 객체
 	config: 페이지의 서블릿 설정 정보(초기화정보)
 	page: 특정 페이지 서블릿 객체
 
 java.lang패키지 - 1개
 	exception: 예외처리를 실행하는 객체
 
 
 * 영역객체(p209~)
  -영역(Scope): 속성을 공유할 수 있는 유효한 범위
  -속성(Attribute): 해당 범위에서 공유되는 데이터
  아래로 갈수록 크기 커짐
     [영역]                     [영역객체]			[유효범위]
     page						pageContext			해당페이지
     request					request				클라이언트 요청이 처리되는 페이지
     session					session				세션이 유지되는 모든 페이지
     application				application			서버 실행하는 동안 모든 페이지
    
 	*영역객체 사용
 	
 	영역객체.setAttribute("데이터이름",값);
 	영역객체.getAttribute("데이터이름");
 	
 	*세션(Session): 서버측에서 관리하는 데이터(컨테이너의 접속 종료전까지 유지 (브라우저 종료까지))
 	**HTTP 프로토콜 통신의 특징: 상태 유지X -> 보완하는것이 세션
 	
 	[클라이언트]                    [서버]
 	              요청(request)
 	             <=           =>
 	              응답(response)
 	
 	*로그인 + 세션
 	=> 로그인 유지되고 있음(세션)
 	1) 로그인창에 아이디/비밀번호 입력
 	2) 로그인정보 처리(admin/1234) 같은짇 다른지 비교
 	3) 처리로직에 따른 페이지 이동
 	3-1) 아이디 o / x 비교
 	3-2) 비밀번호 o / x 비교
 	4) 정상로그인(아이디o/ 비밀번호o) -> 메인페이지 이동
 	   로그인 사용자 아이디를 세션에 저장
 	
 	*쿠키(Cookie)
 	=> HTTP 프로토콜 통신을 하는 경우 요청에 대한 응답을 수행하는 경우 연결을 지속X(상태유지X)
 	
 	
 	
 	
 	
 	
 