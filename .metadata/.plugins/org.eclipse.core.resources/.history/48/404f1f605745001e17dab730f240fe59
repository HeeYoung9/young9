<%@page import="java.sql.PreparedStatement"%>
<%@page import="com.mysql.cj.xdevapi.PreparableStatement"%>
<%@page import="java.sql.Statement"%>
<%@page import="java.sql.Connection"%>
<%@page import="java.sql.DriverManager"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>insertPro.jsp</title>
</head>
<body>

<h1>insertPro.jsp</h1>

<!-- 전달 정보 저장 -->
<% 
 request.setCharacterEncoding("UTF-8");

 String name = request.getParameter("name");
 String gender = request.getParameter("gender");
 int age = Integer.parseInt(request.getParameter("age"));
 String ju1 = request.getParameter("ju1");
 String ju2 = request.getParameter("ju2");
 
 String jumin = ju1 + "-" + ju2;
 
	%>
	
이름: <%= name %> <br>
나이: <%= age %> <br>
성별: <%= gender %> <br>
주민번호: <%=jumin %> <br>


<h2> 전달받은 정보를 DB(Mysql)로 전달</h2>
<%
	//1. 드라이버 로드

	Class.forName("com.mysql.cj.jdbc.Driver");
	System.out.println("드라이버 로드 성공!");
	
	//2. 디비 연결
	
	Connection con = 
	DriverManager.getConnection("jdbc:mysql://localhost:3306/jspdb", "root", "1234");
	System.out.println("디비 연결 성공!");
	System.out.println("con : "+con);
	
	//3. sql구문 작성 &stmt 객체
	
	//String sql = 
	//"insert into itwill_member(idx, name, gender, age, jumin) values(null, '"+name+"','"+ gender+"', '"+age+"', '"+jumin+"')";
	
	String sql = 
			"insert into itwill_member(idx, name, gender, age, jumin) values(null, ?, ?, ?, ?)";
			
	
	//Statement stmt = con.createStatement();
	PreparedStatement pstmt = con.prepareStatement(sql);
	
	//pstmt는 ?를 가지고 있게 됨.
			
	// ??? 정보추가 (?의 개수 = set데이터타입 개수)
			//pstmt.set데이터타입(?의 위치,변수명);
	pstmt.setString(1, name);
	pstmt.setString(2, gender);
	pstmt.setInt(3, age);
	pstmt.setString(4, jumin); //set의 순서는 1부터 올 필요는 없음. ?가 가리키는 위치만 정확하면 순서 바뀌어도 됨.
	//물음표 각각의 위치에 맞는 변수를 저장하도록 설정. Statement보다 보안에 더 좋음.
	
	
	
	//4. sql 실행
	
	//Statement에서 sql 설정시 선언된 변수명을 sql의 변수에서 사용하려면 '"+변수명+"' 으로 사용하면 됨. 
	
	//stmt.execute(sql);
	pstmt.executeUpdate();
	//실생의 결과가 테이블에 변화를 주는 경우 executUpdate() 사용
	//pstmt랑 stmt는 sql의 위치가 다르므로 처리 속도가 다르다. pstmt가 처리 속도가 더 빠름.
	
	System.out.println("회원 정보 저장 완료!");
	
%>

</body>
</html>